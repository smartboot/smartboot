(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{346:function(t,s,n){t.exports=n.p+"assets/img/buffer_optimize_1.092a66fe.png"},388:function(t,s,n){"use strict";n.r(s);var o=n(7),_=Object(o.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("缓冲区是 MQTT 在通信过程中用于存放数据的内存片段，正确的容量配置策略可以达到内存开销与通信性能的最佳平衡点。")]),t._v(" "),s("p",[t._v("为每个TCP连接分配的读缓冲区大小，是在服务启动前便以参数配置的形式确定下来，运行期不可更改。")]),t._v(" "),s("p",[t._v("所以，"),s("strong",[t._v("过小的配置值将使得缓冲区无法容纳一个完整的 MQTT 消息包，导致解码异常")]),t._v("；"),s("strong",[t._v("而过大的容量配置，又会带来内存浪费的问题")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:n(346),alt:""}})]),t._v(" "),s("p",[t._v("为了最大化提升资源的利用率，我们引入了临时缓冲区的策略。\n当消息大小超过默认的读缓冲区容量时，通过申请一片足够大小的临时空间，完成消息解码后再将其释放掉。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("思考")]),t._v(" "),s("p",[t._v("这个时候我们只需思考一个问题：如何设置读缓冲区的大小？")])])])}),[],!1,null,null,null);s.default=_.exports}}]);