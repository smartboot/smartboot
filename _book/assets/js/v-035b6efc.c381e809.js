(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[27],{8480:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-035b6efc",path:"/smart-http/websocket.html",title:"Websocket",lang:"zh-CN",frontmatter:{title:"Websocket"},excerpt:"",headers:[{level:3,title:"示例",slug:"示例",children:[]}],filePathRelative:"smart-http/websocket.md",git:{updatedTime:1623399092e3,contributors:[{name:"三刀",email:"zhengjunweimail@163.com",commits:2}]}}},7339:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>l});var t=a(6252);const e=(0,t.uE)('<h1 id="websocket"><a class="header-anchor" href="#websocket">#</a> WebSocket</h1><p>采用 smart-http 进行 websocket 开发与普通 http 请求差别不大， Http 开发涉及到的接口在 WebSocket 中都有与之相对应的实现，见下表。</p><table><thead><tr><th style="text-align:center;">差异</th><th style="text-align:left;">Http</th><th style="text-align:left;">WebSocket</th></tr></thead><tbody><tr><td style="text-align:center;">请求</td><td style="text-align:left;">HttpRequest</td><td style="text-align:left;">WebSocketRequest</td></tr><tr><td style="text-align:center;">响应</td><td style="text-align:left;">HttpResponse</td><td style="text-align:left;">WebSocketResponse</td></tr><tr><td style="text-align:center;">路由</td><td style="text-align:left;">HttpRouteHandle</td><td style="text-align:left;">WebSocketRouteHandle</td></tr></tbody></table><h3 id="示例"><a class="header-anchor" href="#示例">#</a> 示例</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketDemo</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//1. 实例化路由Handle</span>\n        <span class="token class-name">WebSocketRouteHandle</span> routeHandle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocketRouteHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//2. 指定路由规则以及请求的处理实现</span>\n        routeHandle<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">WebSocketDefaultHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token annotation punctuation">@Override</span>\n            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleTextMessage</span><span class="token punctuation">(</span><span class="token class-name">WebSocketRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">WebSocketResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                response<span class="token punctuation">.</span><span class="token function">sendTextMessage</span><span class="token punctuation">(</span><span class="token string">&quot;接受到客户端消息：&quot;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 3. 启动服务</span>\n        <span class="token class-name">HttpBootstrap</span> bootstrap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpBootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        bootstrap<span class="token punctuation">.</span><span class="token function">wsPipeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>routeHandle<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        bootstrap<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>',5),p=(0,t.Uk)("运行上述代码后，可以通过 websocket 客户端建立连接并调试接口。此处推荐："),o={href:"http://www.websocket-test.com/",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("在线测试"),l={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[e,(0,t.Wm)("p",null,[p,(0,t.Wm)("a",o,[c,(0,t.Wm)(a)])])],64)}}}}]);