(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{343:function(t,a,r){t.exports=r.p+"assets/img/cluster.d16fa314.png"},344:function(t,a,r){t.exports=r.p+"assets/img/lb_cluster.8a986757.png"},385:function(t,a,r){"use strict";r.r(a);var o=r(7),n=Object(o.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("smart-mqtt 支持多个 Broker 服务组织成一套分布式集群。")]),t._v(" "),a("p",[t._v("任意一个 Broker 接收到外部投递的消息后，除了推送给与当前Broker连接的客户端；\n还会分发给集群内其他匹配订阅规则的 Broker 节点，再由该节点将消息推送给与之连接的客户端。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(343),alt:""}})]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("而对于 Broker 分发过来的消息，不会被集群内的接受者 Broker 二次分发。")])]),t._v(" "),a("h2",{attrs:{id:"负载均衡-load-balance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡-load-balance"}},[t._v("#")]),t._v(" 负载均衡（Load Balance）")]),t._v(" "),a("p",[t._v("为了提高 MQTT Broker 集群的可用性、实现负载平衡以及动态扩容，生产场景下通常在客户端与 Broker 集群之间架设一套负载均衡服务。")]),t._v(" "),a("p",[t._v("如果出于安全需要客户端启用 TLS 安全连接，也可将其终止于 Load Balance。Load Balance 与 后端 Broker 集群采用普通 TCP 连接。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(344),alt:""}})]),t._v(" "),a("p",[t._v("市面上多家云厂商都提供了 LB 产品可供选择。倘若需要私有部署可考虑以下产品：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("开源LB")]),t._v(" "),a("th",[t._v("地址")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Haproxy")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://www.haproxy.com/solutions/load-balancing/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.haproxy.com/solutions/load-balancing/"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v("Nginx")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://www.nginx.com/learn/load-balancing/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.nginx.com/learn/load-balancing/"),a("OutboundLink")],1)])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);