(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[316],{1155:(e,l,t)=>{"use strict";t.r(l),t.d(l,{data:()=>r});const r={key:"v-eec4bd72",path:"/smart-servlet/",title:"",lang:"zh-CN",frontmatter:{sidebar:"auto",home:!0,heroText:"smart-servlet",tagline:"国产开源 Servlet3.1 服务器",footer:"Apache License 2.0 | Copyright © 2017-present 三刀"},excerpt:"",headers:[{level:2,title:"架构设计",slug:"架构设计",children:[]},{level:2,title:"特别说明",slug:"特别说明",children:[]}],filePathRelative:"smart-servlet/README.md",git:{updatedTime:1623571098e3,contributors:[{name:"三刀",email:"zhengjunweimail@163.com",commits:2}]}}},2140:(e,l,t)=>{"use strict";t.r(l),t.d(l,{default:()=>k});var r=t(6252);const s=t.p+"assets/img/smart-servlet.a80125e1.png",n=(0,r.Wm)("p",null,"smart-servlet 是一款实现了 Servlet 3.1 规范，支持多应用隔离部署的的 Web 容器。与此同时，smart-servlet 还是一款插件化容器，基于内置的沙箱环境确保 smart-servlet 拥有最精简的运行能力，用户还可以通过自定义插件扩展容器的服务能力。",-1),m=(0,r.Wm)("h2",{id:"架构设计"},[(0,r.Wm)("a",{class:"header-anchor",href:"#架构设计"},"#"),(0,r.Uk)(" 架构设计")],-1),a=(0,r.Wm)("p",null,"smart-servlet 在 smart-http 的架构之上，通过继承 HttpHandle 实现了 Servlet 规范。这意味着任何 smart-http 服务都可以通过单独引入 smart-servlet 核心包的方式，将普通的 http 应用改造成 servlet 应用，而且这个成本是极低的。",-1),u=(0,r.Wm)("p",null,[(0,r.Wm)("img",{src:s,alt:""})],-1),i=(0,r.Wm)("p",null,[(0,r.Wm)("strong",null,"产品特色")],-1),o=(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,"低学习成本，与 Tomcat、Undertow 保持同样的使用习惯。"),(0,r.Wm)("li",null,"实现 Servlet3.1 核心规范：request、response、session、cookie、dispatcher、servletContext。"),(0,r.Wm)("li",null,"实现 JSR 356 Java™ API for WebSocket 规范。"),(0,r.Wm)("li",null,"插件化设计，自由 DIY 服务器。"),(0,r.Wm)("li",null,"开箱即用，运行程序包、maven本地开发/调试插件、springboot starter 一应俱全，满足你的开发、部署需求。")],-1),W=(0,r.Wm)("p",null,[(0,r.Wm)("strong",null,"工程模块")],-1),p=(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[(0,r.Uk)("smart-servlet 【工程主目录】 "),(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,"servlet-core【servlet规范实现核心包】"),(0,r.Wm)("li",null,[(0,r.Uk)("plugins【容器可扩展插件】 "),(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[(0,r.Uk)("dispatcher【RequestDispatcher插件，"),(0,r.Wm)("strong",null,"必选"),(0,r.Uk)("】")]),(0,r.Wm)("li",null,[(0,r.Uk)("session【HttpSession插件，"),(0,r.Wm)("strong",null,"可选"),(0,r.Uk)("】")]),(0,r.Wm)("li",null,[(0,r.Uk)("websocket【 JSR 356 规范插件，"),(0,r.Wm)("strong",null,"可选"),(0,r.Uk)("】")])])]),(0,r.Wm)("li",null,"smart-servlet-maven-plugin【业务系统通过pom.xml集成本地开发环境】"),(0,r.Wm)("li",null,"spring-boot-start【springboot业务系统通过pom.xml集成本地开发环境】"),(0,r.Wm)("li",null,"archives【用于部署War包的可执行环境软件包，开箱即用】")])])],-1),c=(0,r.Wm)("h2",{id:"特别说明"},[(0,r.Wm)("a",{class:"header-anchor",href:"#特别说明"},"#"),(0,r.Uk)(" 特别说明")],-1),h=(0,r.Uk)("本项目还处于研发阶段，还未完成所有 Servlet 标准的兑现。如若在使用过程中发现问题可提 "),v={href:"https://gitee.com/smartboot/smart-servlet/issues",target:"_blank",rel:"noopener noreferrer"},d=(0,r.Uk)("Issues"),g=(0,r.Uk)(" 反馈，我们会尽快安排处理，感谢您的理解和支持！"),k={render:function(e,l){const t=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.j4)(r.HY,null,[n,m,a,u,i,o,W,p,c,(0,r.Wm)("p",null,[h,(0,r.Wm)("a",v,[d,(0,r.Wm)(t)]),g])],64)}}}}]);