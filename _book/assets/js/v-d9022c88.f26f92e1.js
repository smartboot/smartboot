(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[775],{9020:(e,t,s)=>{"use strict";s.r(t),s.d(t,{data:()=>a});const a={key:"v-d9022c88",path:"/smart-socket/chapter-2/",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"第三章 smart-socket源码解析",slug:"第三章-smart-socket源码解析",children:[]}],filePathRelative:"smart-socket/chapter-2/README.md",git:{updatedTime:1614227498e3,contributors:[{name:"三刀",email:"zhengjunweimail@163.com",commits:1}]}}},9274:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>l});const a=(0,s(6252).uE)('<h2 id="第三章-smart-socket源码解析"><a class="header-anchor" href="#第三章-smart-socket源码解析">#</a> 第三章 smart-socket源码解析</h2><p>smart-socket的源码按maven模块和功能划分的结构如下：</p><ul><li>aio-core 核心模块 <ul><li>通信内核</li><li>内存池</li></ul></li><li>aio-pro 扩展模块 <ul><li>UDP 通信</li><li>解码器：固定长度解码器、特定结束符解码器</li><li>插件：黑名单、内存池监控、心跳、运行指标采集、断链重连、Socket配置项、TLS/SSL通信</li><li>工具类</li></ul></li></ul><p>前文也提及过，aio-core 是 smart-socket 的核心模块，掌握该模块就基本掌握了smart-socket的设计精髓。</p><p>而 aio-pro 是专为应用层开发提供了一些辅助性能力，如果恰好其中某个功能符合你的需求，可直接拿去使用。 若不满足，你也可以单独进行开发。在此，我们非常欢迎大家贡献自己的优秀设计，为 smart-socket 添砖加瓦。</p>',5),l={render:function(e,t){return a}}}}]);