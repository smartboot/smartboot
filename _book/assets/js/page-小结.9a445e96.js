(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{523:function(t,s,e){"use strict";e.r(s);var r=e(1),a=Object(r.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("h1",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[this._v("#")]),this._v(" 小结")]),this._v(" "),s("p",[this._v("本章为大家演示了smart-socket最基础的应用，可以看到该框架相较于其它知名NIO框架（具备代表性的AIO框架不多，暂且不论），开发起来的代码量和难度都是比较低的。\n接下来我们会对smart-socket进行更深入的剖析，感兴趣的读者朋友可继续往下看，如果结合smart-socket的源码阅读效果更佳。")])])}),[],!1,null,null,null);s.default=a.exports},524:function(t,s,e){"use strict";e.r(s);var r=e(1),a=Object(r.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[this._v("#")]),this._v(" 小结")]),this._v(" "),s("p",[this._v('源码永远是最好的教程，善于读源码和debug朋友掌握smart-socket完全是轻而易举的事。源码是作者设计理念最直观的展现，这也是开源的魅力所在。"talk is cheap show me the code"，开源让技术难题的探讨变得更加务实，正如smart-socket，在您看完源码后心中对它都会有一个定论。在作者看来，smart-socket切切实实降低了通信开发学习门槛，也保障了服务的高性能、高可用。如果读者朋友对源码中某些部分的设计存在疑虑，也欢迎与作者保持沟通。')])])}),[],!1,null,null,null);s.default=a.exports}}]);