(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{345:function(t,s,r){"use strict";r.r(s);var e=r(7),a=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",{attrs:{align:"center"}},[s("a",{attrs:{href:"https://gitee.com/smartboot/smart-servlet",target:"_blank"}},[s("img",{staticClass:"no-zoom",attrs:{src:"https://gitee.com/smartboot/smart-servlet/badge/star.svg?theme=gvp",alt:"star"}})]),t._v(" "),s("a",{attrs:{href:"https://gitee.com/smartboot/smart-servlet",target:"_blank"}},[s("img",{staticClass:"no-zoom",attrs:{src:"https://gitee.com/smartboot/smart-servlet/badge/fork.svg?theme=gvp",alt:"fork"}})]),t._v(" "),s("a",{attrs:{href:"https://www.murphysec.com/dr/7sZdQKJ9CLbpVU2roi",alt:"OSCS Status"}},[s("img",{staticClass:"no-zoom",attrs:{src:"https://www.oscs1024.com/platform/badge/smartboot/smart-servlet.svg?size=small"}})]),t._v(" "),s("a",{attrs:{href:"https://github.com/smartboot/smart-servlet",target:"_blank"}},[s("img",{staticClass:"no-zoom",attrs:{src:"https://img.shields.io/github/stars/smartboot/smart-servlet",alt:"GitHub stars"}})]),t._v(" "),s("a",{attrs:{href:"https://github.com/smartboot/smart-servlet",target:"_blank"}},[s("img",{staticClass:"no-zoom",attrs:{src:"https://img.shields.io/github/forks/smartboot/smart-servlet",alt:"GitHub forks"}})])]),t._v("\nsmart-servlet 是一款实现了 Servlet 3.1 规范，支持多应用隔离部署的的 Web 容器。与此同时，smart-servlet 还是一款插件化容器，基于内置的沙箱环境确保 smart-servlet 拥有最精简的运行能力，用户还可以通过自定义插件扩展容器的服务能力。\n"),s("h2",{attrs:{id:"架构设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#架构设计"}},[t._v("#")]),t._v(" 架构设计")]),t._v(" "),s("p",[t._v("smart-servlet 在 smart-http 的架构之上，通过继承 HttpHandle 实现了 Servlet 规范。这意味着任何 smart-http 服务都可以通过单独引入 smart-servlet 核心包的方式，将普通的 http 应用改造成 servlet 应用，而且这个成本是极低的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-3ffd644ea02c150e7ee44dab5a4fc065cff.png",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("产品特色")])]),t._v(" "),s("ul",[s("li",[t._v("国产血统：核心技术 100% 全栈自研。")]),t._v(" "),s("li",[t._v("性能优越：搭载最新版通信微内核 smart-socket。")]),t._v(" "),s("li",[t._v("安全可靠：严格遵循协议规范；支持加密传输方式。")]),t._v(" "),s("li",[t._v("简洁易用：支持 War 包、springboot、maven-plugin等多种运行模式，使用体验100%兼容 Tomcat。")])]),t._v(" "),s("p",[s("strong",[t._v("工程模块")])]),t._v(" "),s("ul",[s("li",[t._v("smart-servlet 【工程主目录】\n"),s("ul",[s("li",[t._v("servlet-core【servlet规范实现核心包】")]),t._v(" "),s("li",[t._v("plugins【容器可扩展插件】\n"),s("ul",[s("li",[t._v("dispatcher【RequestDispatcher插件，"),s("strong",[t._v("必选")]),t._v("】")]),t._v(" "),s("li",[t._v("session【HttpSession插件，"),s("strong",[t._v("可选")]),t._v("】")]),t._v(" "),s("li",[t._v("websocket【 JSR 356 规范插件，"),s("strong",[t._v("可选")]),t._v("】")])])]),t._v(" "),s("li",[t._v("smart-servlet-maven-plugin【业务系统通过pom.xml集成本地开发环境】")]),t._v(" "),s("li",[t._v("spring-boot-start【springboot业务系统通过pom.xml集成本地开发环境】")])])])]),t._v(" "),s("h2",{attrs:{id:"特别说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特别说明"}},[t._v("#")]),t._v(" 特别说明")]),t._v(" "),s("p",[t._v("本项目还处于研发阶段，还未完成所有 Servlet 标准的兑现。如若在使用过程中发现问题可提 "),s("a",{attrs:{href:"https://gitee.com/smartboot/smart-servlet/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("Issues"),s("OutboundLink")],1),t._v(" 反馈，我们会尽快安排处理，感谢您的理解和支持！")])])}),[],!1,null,null,null);s.default=a.exports}}]);